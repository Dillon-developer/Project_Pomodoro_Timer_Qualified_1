{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dill1\\\\Thinkful\\\\capstone\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration } from '../utils/duration';\nimport { secondsToDuration } from '../utils/duration';\nimport PlayStop from \"./PlayStop\";\nimport BreakDuration from \"./BreakDuration\";\nimport FocusDuration from \"./FocusDuration\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [play, setPlay] = useState(false);\n  const [onBreak, setOnBreak] = useState(false);\n  const [focusSession, setFocusSession] = useState(false);\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [durationMinutes, setDurationMinutes] = useState(25);\n  const [durationSeconds, setDurationSeconds] = useState(0);\n  const [initialFocusTime, setInitialFocusTime] = useState(25);\n  const [initialBreakTime, setInitialBreakTime] = useState(5);\n  const [progressBar, setProgressBar] = useState(0);\n\n  const decreaseFocusDuration = () => {\n    if (focusDuration > 5 && !isTimerRunning && play) {\n      setFocusDuration(minutes => minutes -= 5);\n    }\n  };\n\n  const increaseFocusDuration = () => {\n    if (focusDuration < 60 && !isTimerRunning && play) {\n      setFocusDuration(minutes => minutes += 5);\n    }\n  };\n\n  const decreaseBreakDuration = () => {\n    if (breakDuration > 1 && !isTimerRunning && play) {\n      setBreakDuration(minutes => minutes--);\n    }\n  };\n\n  const increaseBreakDuration = () => {\n    if (breakDuration < 15 && !isTimerRunning && play) {\n      setBreakDuration(minutes => minutes++);\n    }\n  };\n\n  function percentage(currentMinutes, currentSeconds, initialMinutes) {\n    return 100 - (currentMinutes * 60 + currentSeconds) / (initialMinutes * 60) * 100;\n  }\n\n  useInterval(() => {\n    // ToDo: Implement what should happen when the timer is running\n    setDurationSeconds(second => {\n      second === 0 ? second = 59 : second--;\n\n      if (second === 59) {\n        setDurationMinutes(minutes => minutes = durationMinutes--);\n      }\n    });\n\n    if (onBreak) {\n      setProgressBar(progress => progress = percentage(durationMinutes, durationSeconds, initialBreakTime));\n    } else {\n      setProgressBar(progress => progress = percentage(durationMinutes, durationSeconds, initialFocusTime));\n    }\n  }, isTimerRunning ? 1000 : null);\n\n  function playPause() {\n    setIsTimerRunning(prevState => !prevState);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FocusDuration, {\n    focusDurationMinutes: focusDurationMinutes,\n    decreaseFocusDuration: decreaseFocusDuration,\n    increaseFocusDuration: increaseFocusDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BreakDuration, {\n    breakDurationMinutes: breakDurationMinutes,\n    decreaseBreakDuration: decreaseBreakDuration,\n    increaseBreakDuration: increaseBreakDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(PlayStop, {\n    playPause: playPause,\n    classNames: classNames,\n    isTimerRunning: isTimerRunning,\n    stopButton: stopButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: activeSession ? {\n      display: \"block\"\n    } : {\n      display: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, !onBreak ? \"Focusing\" : \"On Break\", \" for \", !onBreak ? minutesToDuration(initialDuration) : minutesToDuration(initialBreakDuration), \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, secondsToDuration(durationMinutes * 60 + durationSeconds), \" remaining\"), !isTimerRunning ? /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 30\n    }\n  }, \"PAUSED\") : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": durationProgress,\n    style: {\n      width: `${durationProgress}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["C:/Users/dill1/Thinkful/capstone/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","minutesToDuration","secondsToDuration","PlayStop","BreakDuration","FocusDuration","Pomodoro","isTimerRunning","setIsTimerRunning","play","setPlay","onBreak","setOnBreak","focusSession","setFocusSession","focusDuration","setFocusDuration","breakDuration","setBreakDuration","durationMinutes","setDurationMinutes","durationSeconds","setDurationSeconds","initialFocusTime","setInitialFocusTime","initialBreakTime","setInitialBreakTime","progressBar","setProgressBar","decreaseFocusDuration","minutes","increaseFocusDuration","decreaseBreakDuration","increaseBreakDuration","percentage","currentMinutes","currentSeconds","initialMinutes","second","progress","playPause","prevState","focusDurationMinutes","breakDurationMinutes","stopButton","activeSession","display","initialDuration","initialBreakDuration","height","durationProgress","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration } from '../utils/duration';\nimport { secondsToDuration } from '../utils/duration';\nimport PlayStop from \"./PlayStop\";\nimport BreakDuration from \"./BreakDuration\";\nimport FocusDuration from \"./FocusDuration\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [play, setPlay] = useState(false);\n  const [onBreak, setOnBreak] = useState(false);\n  const [focusSession, setFocusSession] = useState(false);\n\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [durationMinutes, setDurationMinutes] = useState(25);\n  const [durationSeconds, setDurationSeconds] = useState(0);\n  const [initialFocusTime, setInitialFocusTime] = useState(25);\n  const [initialBreakTime, setInitialBreakTime] = useState(5);\n\n  const [progressBar, setProgressBar] = useState(0);\n\n  const decreaseFocusDuration = () => {\n    if (focusDuration > 5 && !isTimerRunning && play) {\n      setFocusDuration(minutes => minutes -= 5)\n    }\n  }\n\n  const increaseFocusDuration = () => {\n    if(focusDuration < 60 && !isTimerRunning && play) {\n      setFocusDuration(minutes => minutes += 5)\n    }\n  }\n\n  const decreaseBreakDuration = () => {\n    if(breakDuration > 1 && !isTimerRunning && play) {\n      setBreakDuration(minutes => minutes--)\n    }\n  }\n\n  const increaseBreakDuration = () => {\n    if(breakDuration < 15 && !isTimerRunning && play) {\n      setBreakDuration(minutes => minutes++)\n    }\n  }\n  \n  function percentage(currentMinutes, currentSeconds, initialMinutes) {\n    return 100 - (((currentMinutes * 60) + currentSeconds) / (initialMinutes * 60) * 100);\n  }\n  \n\n\n  useInterval(\n    () => {\n      // ToDo: Implement what should happen when the timer is running\n      setDurationSeconds(second => {\n        second === 0 ? second = 59 : second--;\n        if (second === 59) {\n          setDurationMinutes(minutes => minutes = durationMinutes--)\n        }\n      });\n\n      if(onBreak) {\n        setProgressBar(progress => progress = percentage(durationMinutes, durationSeconds, initialBreakTime))\n      } else {\n        setProgressBar(progress => progress = percentage(durationMinutes, durationSeconds, initialFocusTime))\n      }\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <FocusDuration focusDurationMinutes={focusDurationMinutes} decreaseFocusDuration={decreaseFocusDuration} increaseFocusDuration={increaseFocusDuration} />\n        <BreakDuration breakDurationMinutes={breakDurationMinutes} decreaseBreakDuration={decreaseBreakDuration} increaseBreakDuration={increaseBreakDuration} />\n      </div>\n      <PlayStop playPause={playPause} classNames={classNames} isTimerRunning={isTimerRunning} stopButton={stopButton} />\n      <div style={activeSession ? {display: \"block\"} : {display: \"none\"}}>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <h2 data-testid=\"session-title\">\n              {!onBreak ? \"Focusing\" : \"On Break\"} for {!onBreak ? minutesToDuration(initialDuration) : minutesToDuration(initialBreakDuration)} minutes\n          </h2>\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {secondsToDuration((durationMinutes * 60) + durationSeconds)} remaining\n          </p>\n          {!isTimerRunning ? <h2>PAUSED</h2> : null}\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={durationProgress}\n                style={{ width: `${durationProgress}%` }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}