{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dill1\\\\Thinkful\\\\capstone\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration } from '../utils/duration';\nimport { secondsToDuration } from '../utils/duration';\nimport PlayStop from \"./PlayStop\";\nimport BreakDuration from \"./BreakDuration\";\nimport FocusDuration from \"./FocusDuration\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [play, setPlay] = useState(false);\n  const [onBreak, setOnBreak] = useState(false);\n  const [focusSession, setFocusSession] = useState(false);\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [durationMinutes, setDurationMinutes] = useState(25);\n  const [durationSeconds, setDurationSeconds] = useState(0);\n  const [initialFocusTime, setInitialFocusTime] = useState(25);\n  const [initialBreakTime, setInitialBreakTime] = useState(5);\n  const [progressBar, setProgressBar] = useState(0);\n\n  const decreaseFocusDuration = () => {\n    if (focusDuration > 5 && !isTimerRunning && play) setFocusDuration(minutes => minutes -= 5);\n  };\n\n  const increaseFocusDuration = () => {\n    if (focusDuration < 60 && !isTimerRunning && play) setFocusDuration(minutes => minutes += 5);\n  };\n\n  const decreaseBreakDuration = () => {\n    if (breakDuration > 1 && !isTimerRunning && play) setBreakDuration(minutes => minutes -= 1);\n  };\n\n  const increaseBreakDuration = () => {\n    if (breakDuration < 15 && !isTimerRunning && play) setBreakDuration(minutes => minutes += 1);\n  };\n\n  function percentage(currentMinutes, currentSeconds, initialMinutes) {\n    return 100 - (currentMinutes * 60 + currentSeconds) / (initialMinutes * 60) * 100;\n  }\n\n  useInterval(() => {\n    // What should happen when the timer is running\n    setDurationSeconds(second => {\n      second === 0 ? second = 59 : second -= 1;\n      if (second === 59) setDurationMinutes(minutes => minutes = durationMinutes - 1);\n      return second;\n    });\n    if (onBreak) setProgressBar(progress => progress = percentage(durationMinutes, durationSeconds, initialBreakTime));else setProgressBar(progress => progress = percentage(durationMinutes, durationSeconds, initialFocusTime));\n    if (durationMinutes === 0 && durationSeconds === 1) timeExpired();\n  }, isTimerRunning ? 1000 : null);\n\n  function timeExpired() {\n    if (!onBreak) focusTimeExpired();else breakTimeExpired();\n  }\n\n  function focusTimeExpired() {\n    new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n    setOnBreak(state => state = true);\n    setProgressBar(progress => progress = 0);\n    setDurationSeconds(seconds => seconds = 0);\n    setDurationMinutes(minutes => minutes = initialBreakTime);\n  }\n\n  function breakTimeExpired() {\n    new Audio(`https://bigsoundbank.com/UPLOAD/mp3/0899.mp3`).play();\n    setOnBreak(state => state = false);\n    setProgressBar(progress => progress = 0);\n    setDurationSeconds(seconds => seconds = 0);\n    setDurationMinutes(minutes => minutes = initialFocusTime);\n  }\n\n  function playPause() {\n    if (play) {\n      setInitialFocusTime(duration => duration = focusDuration);\n      setInitialBreakTime(duration => duration = breakDuration);\n      setDurationMinutes(duration => duration = focusDuration);\n      setPlay(state => state = false);\n    }\n\n    setFocusSession(state => state = true);\n    setIsTimerRunning(prevState => !prevState);\n  }\n\n  function stopButton() {\n    setPlay(state => state = true);\n    setIsTimerRunning(state => state = false);\n    setOnBreak(state => state = false);\n    setFocusSession(state => state = false);\n    setProgressBar(progress => progress = 0);\n    setDurationSeconds(seconds => seconds = 0);\n    setDurationMinutes(duration => duration = focusDuration);\n    setInitialFocusTime(duration => duration = focusDuration);\n    setInitialBreakTime(duration => duration = breakDuration);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FocusDuration, {\n    focusDuration: focusDuration,\n    decreaseFocusDuration: decreaseFocusDuration,\n    increaseFocusDuration: increaseFocusDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BreakDuration, {\n    breakDuration: breakDuration,\n    decreaseBreakDuration: decreaseBreakDuration,\n    increaseBreakDuration: increaseBreakDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(PlayStop, {\n    playPause: playPause,\n    classNames: classNames,\n    isTimerRunning: isTimerRunning,\n    stopButton: stopButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: focusSession ? {\n      display: \"block\"\n    } : {\n      display: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, !onBreak ? \"Focusing\" : \"On Break\", \" for \", !onBreak ? minutesToDuration(initialFocusTime) : minutesToDuration(initialBreakTime), \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, secondsToDuration(durationMinutes * 60 + durationSeconds), \" remaining\"), !isTimerRunning ? /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 30\n    }\n  }, \"PAUSED\") : null)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": progressBar,\n    style: {\n      width: `${progressBar}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["C:/Users/dill1/Thinkful/capstone/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","minutesToDuration","secondsToDuration","PlayStop","BreakDuration","FocusDuration","Pomodoro","isTimerRunning","setIsTimerRunning","play","setPlay","onBreak","setOnBreak","focusSession","setFocusSession","focusDuration","setFocusDuration","breakDuration","setBreakDuration","durationMinutes","setDurationMinutes","durationSeconds","setDurationSeconds","initialFocusTime","setInitialFocusTime","initialBreakTime","setInitialBreakTime","progressBar","setProgressBar","decreaseFocusDuration","minutes","increaseFocusDuration","decreaseBreakDuration","increaseBreakDuration","percentage","currentMinutes","currentSeconds","initialMinutes","second","progress","timeExpired","focusTimeExpired","breakTimeExpired","Audio","state","seconds","playPause","duration","prevState","stopButton","display","height","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration } from '../utils/duration';\nimport { secondsToDuration } from '../utils/duration';\nimport PlayStop from \"./PlayStop\";\nimport BreakDuration from \"./BreakDuration\";\nimport FocusDuration from \"./FocusDuration\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [play, setPlay] = useState(false);\n  const [onBreak, setOnBreak] = useState(false);\n  const [focusSession, setFocusSession] = useState(false);\n\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [durationMinutes, setDurationMinutes] = useState(25);\n  const [durationSeconds, setDurationSeconds] = useState(0);\n  const [initialFocusTime, setInitialFocusTime] = useState(25);\n  const [initialBreakTime, setInitialBreakTime] = useState(5);\n\n  const [progressBar, setProgressBar] = useState(0);\n\n  const decreaseFocusDuration = () => {\n    if (focusDuration > 5 && !isTimerRunning && play) \n      setFocusDuration(minutes => minutes -= 5);\n    \n  }\n\n  const increaseFocusDuration = () => {\n    if(focusDuration < 60 && !isTimerRunning && play) \n      setFocusDuration(minutes => minutes += 5);\n    \n  }\n\n  const decreaseBreakDuration = () => {\n    if(breakDuration > 1 && !isTimerRunning && play) \n      setBreakDuration(minutes => minutes -= 1);\n    \n  }\n\n  const increaseBreakDuration = () => {\n    if(breakDuration < 15 && !isTimerRunning && play) \n      setBreakDuration(minutes => minutes += 1);\n    \n  }\n  \n  function percentage(currentMinutes, currentSeconds, initialMinutes) {\n    return 100 - (((currentMinutes * 60) + currentSeconds) / (initialMinutes * 60) * 100);\n  }\n  \n\n\n  useInterval(\n    () => {\n      // What should happen when the timer is running\n      setDurationSeconds(second => {\n        second === 0 ? second = 59 : second -= 1;\n        if (second === 59)\n          setDurationMinutes(minutes => minutes = durationMinutes - 1);\n        return second;\n      });\n\n      if(onBreak) \n          setProgressBar(progress => progress = percentage(durationMinutes, durationSeconds, initialBreakTime))\n        else \n          setProgressBar(progress => progress = percentage(durationMinutes, durationSeconds, initialFocusTime))\n      \n\n      if (durationMinutes === 0 && durationSeconds === 1) \n        timeExpired();\n      \n\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  function timeExpired() {\n    if (!onBreak) \n      focusTimeExpired();\n     else \n      breakTimeExpired();\n    \n  }\n\n\n  function focusTimeExpired() {\n    new Audio(`https://bigsoundbank.com/UPLOAD/mp3/1482.mp3`).play();\n    setOnBreak(state => state = true);\n    setProgressBar(progress => progress = 0);\n    setDurationSeconds(seconds => seconds = 0);\n    setDurationMinutes(minutes => minutes = initialBreakTime);\n  }\n\n  function breakTimeExpired() {\n    new Audio(`https://bigsoundbank.com/UPLOAD/mp3/0899.mp3`).play();\n    setOnBreak(state => state = false);\n    setProgressBar(progress => progress = 0);\n    setDurationSeconds(seconds => seconds = 0);\n    setDurationMinutes(minutes => minutes = initialFocusTime);\n  }\n\n  function playPause() {\n    if(play) {\n      setInitialFocusTime(duration => duration = focusDuration);\n      setInitialBreakTime(duration => duration = breakDuration);\n      setDurationMinutes(duration => duration = focusDuration);\n      setPlay(state => state = false);\n    }\n    setFocusSession(state => state = true);\n    setIsTimerRunning((prevState) => !prevState);\n  }\n\n  function stopButton() {\n    setPlay(state => state = true);\n    setIsTimerRunning(state => state = false);\n    setOnBreak(state => state = false);\n    setFocusSession(state => state = false);\n    setProgressBar(progress => progress = 0);\n    setDurationSeconds(seconds => seconds = 0);\n    setDurationMinutes(duration => duration = focusDuration);\n    setInitialFocusTime(duration => duration = focusDuration);\n    setInitialBreakTime(duration => duration = breakDuration);\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <FocusDuration focusDuration={focusDuration} decreaseFocusDuration={decreaseFocusDuration} increaseFocusDuration={increaseFocusDuration} />\n        <BreakDuration breakDuration={breakDuration} decreaseBreakDuration={decreaseBreakDuration} increaseBreakDuration={increaseBreakDuration} />\n      </div>\n      <PlayStop playPause={playPause} classNames={classNames} isTimerRunning={isTimerRunning} stopButton={stopButton} />\n      <div style={focusSession ? {display: \"block\"} : {display: \"none\"}}>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <h2 data-testid=\"session-title\">\n              {!onBreak ? \"Focusing\" : \"On Break\"} for {!onBreak ? minutesToDuration(initialFocusTime) : minutesToDuration(initialBreakTime)} minutes\n          </h2>\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {secondsToDuration((durationMinutes * 60) + durationSeconds)} remaining\n          </p>\n          {!isTimerRunning ? <h3>PAUSED</h3> : null}\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={progressBar}\n                style={{ width: `${progressBar}%` }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}